mod error;
mod issue;
mod hash;
mod rsa;
mod ecdsa;
mod utils;
mod policy;
mod engine;

use std::process::ExitCode;
use std::time::Instant;

use clap::{command, Parser};

use parser::VecDeep;
use error::Error;

#[derive(Parser, Debug)]
#[command(long_about = None)]
struct Args {
    /// A Prolog source file containing the policy program
    policy: String,

    /// File containing the trusted root certificates
    roots: String,

    /// The certificate chain to verify
    chain: String,

    /// The target domain to be validated
    domain: String,

    /// Path to the SWI-Prolog binary
    #[clap(long, value_parser, num_args = 0.., value_delimiter = ' ', default_value = "swipl")]
    swipl_bin: String,

    /// Enable debug mode
    #[arg(long, default_value_t = false)]
    debug: bool,

    /// Override the current time with the given timestamp
    #[clap(short = 't', long)]
    override_time: Option<i64>,

    /// Generate timing stats in wall-clock time
    #[clap(short = 's', long, default_value_t = false)]
    stats: bool,
}

fn main_args(args: Args) -> Result<(), Error> {
    // Parse roots and chain PEM files
    let roots_bytes = utils::read_pem_file_as_bytes(&args.roots)?;
    let chain_bytes = utils::read_pem_file_as_bytes(&args.chain)?;

    let roots = roots_bytes.iter().map(|cert_bytes| {
        utils::parse_x509_certificate(cert_bytes)
    }).collect::<Result<Vec<_>, _>>()?;

    let chain = chain_bytes.iter().map(|cert_bytes| {
        utils::parse_x509_certificate(cert_bytes)
    }).collect::<Result<Vec<_>, _>>()?;

    let policy = policy::ExecPolicy::Chrome(policy::ExecChromeEnvironment {
        time: args.override_time.unwrap_or(chrono::Utc::now().timestamp()) as u64,

        public_suffix: vec![],
        crl: vec![],
        trusted: ["5A2FC03F0C83B090BBFA40604B0988446C7636183DF9846E17101A447FB8EFD6", "125609AA301DA0A249B97A8239CB6A34216F44DCAC9F3954B14292F2E8C8608F", "BC4D809B15189D78DB3E1D8CF4F9726A795DA1643CA5F1358E1DDB0EDC0D7EB3", "86A1ECBA089C4A8D3BBE2734C612BA341D813E043CF9E8A862CD5C57A36BBE6B", "9A6EC012E1A7DA9DBE34194D478AD7C0DB1822FB071DF12981496ED104384113", "55926084EC963A64B96E2ABE01CE0BA86A64FBFEBCC7AAB5AFC155B37FD76066", "0376AB1D54C5F9803CE4B2E201A0EE7EEF7B57B636E8A93C9B8D4860C96F5FA7", "0A81EC5A929777F145904AF38D5D509F66B5E2C58FCDB531058B0E17F3F0B41B", "70A73F7F376B60074248904534B11482D5BF0E698ECC498DF52577EBF2E93B9A", "BD71FDF6DA97E4CF62D1647ADD2581B07D79ADF8397EB4ECBA9C5E8488821423", "F356BEA244B7A91EB35D53CA9AD7864ACE018E2D35D5F8F96DDF68A6F41AA474", "04048028BF1F2864D48F9AD4D83294366A828856553F3B14303F90147F5D40EF", "16AF57A9F676B0AB126095AA5EBADEF22AB31119D644AC95CD4B93DBF3F26AEB", "9A114025197C5BB95D94E63D55CD43790847B646B23CDF11ADA4A00EFF15FB48", "EDF7EBBCA27A2A384D387B7D4010C666E2EDB4843E4C29B4AE1D5B9332E6B24D", "E23D4A036D7B70E9F595B1422079D2B91EDFBB1FB651A0633EAA8A9DC5F80703", "E3B6A2DB2ED7CE48842F7AC53241C7B71D54144BFB40C11F3F1D0B42F5EEA12D", "2A99F5BC1174B73CBB1D620884E01C34E51CCB3978DA125F0E33268883BF4158", "0F993C8AEF97BAAF5687140ED59AD1821BB4AFACF0AA9A58B5D57A338A3AFBCB", "EAA962C4FA4A6BAFEBE415196D351CCD888D4F53F3FA8AE6D7C466A94E6042BB", "5C58468D55F58E497E743982D2B50010B6D165374ACF83A7D4A32DB768C4408E", "5CC3D78E4E1D5E45547A04E6873E64F90CF9536D1CCC2EF800F355C4C5FD70FD", "063E4AFAC491DFD332F3089B8542E94617D893D7FE944E10A7937EE29D9693C0", "D7A7A0FB5D7E2731D771E9484EBCDEF71D5F0C3E0A2948782BC83EE0EA699EF4", "0C2CD63DF7806FA399EDE809116B575BF87989F06518F9808C860503178BAF66", "1793927A0614549789ADCE2F8F34F7F0B66D0F3AE3A3B84D21EC15DBBA4FADC7", "52F0E1C4E58EC629291B60317F074671B85D7EA80D5B07273463534B32B40234", "960ADF0063E96356750C2965DD0A0867DA0B9CBD6E77714AEAFB2349AB393DA3", "B6191A50D0C3977F7DA99BCDAAC86A227DAEB9679EC70BA3B0C9D92271C170D3", "3E9099B5015E8F486C00BCEA9D111EE721FABA355A89BCF1DF69561E3DC6325C", "7D05EBB682339F8C9451EE094EEBFEFA7953A114EDB2F44949452FAB7D2FC185", "7E37CB8B4C47090CAB36551BA6F45DB840680FBA166A952DB100717F43053FC2", "4348A0E9444C78CB265E058D5E8944B4D84F9662BD26DB257F8934A443C70161", "CB3CCBB76031E5E0138F8DD39A23F9DE47FFC35E43C1144CEA27D46A5AB1CB5F", "31AD6648F8104138C738F39EA4320133393E3A18CC02296EF97C2AC9EF6731D0", "7431E5F4C3C1CE4690774F0B61E05440883BA9A01ED00BA6ABD7806ED3B118CF", "552F7BDCF1A7AF9E6CE672017F4F12ABF77240C78E761AC203D1D9D20AC89988", "0687260331A72403D909F105E69BCF0D32E1BD2493FFC6D9206D11BCD6770739", "49E7A442ACF0EA6287050054B52564B650E4F49E42E348D6AA38E039E957B1C1", "EEC5496B988CE98625B934092EEC2908BED0B0F316C2D4730C84EAF1F3D34881", "88497F01602F3154246AE28C4D5AEF10F1D87EBB76626F4AE0B7F95BA7968799", "3E84BA4342908516E77573C0992F0979CA084E4685681FF195CCBA8A229B8A76", "6DC47172E01CBCB0BF62580D895FE2B8AC9AD4F873801E0C10B9C837D21EB177", "73C176434F1BC6D5ADF45B0E76E727287C8DE57616C1E6E6141A2B2CBC7D8E4C", "02ED0EB28C14DA45165C566791700D6451D7FB56F0B2AB1D3B8EB070E56EDFF5", "43DF5774B03E7FEF5FE40D931A7BEDF1BB2E6B42738C4E6D3841103D3AA7F339", "C0A6F4DC63A24BFDCF54EF2A6A082A0A72DE35803E2FF5FF527AE5D87206DFD5", "B0BFD52BB0D7D9BD92BF5D4DC13DA255C02C542F378365EA893911F55E55F23C", "FF856A2D251DCD88D36656F450126798CFABAADE40799C722DE4D2B5DB36A73A", "37D51006C512EAAB626421F1EC8C92013FC5F82AE98EE533EB4619B8DEB4D06C", "5EDB7AC43B82A06A8761E8D7BE4979EBF2611F7DD79BF91C1C6B566A219ED766", "B478B812250DF878635C2AA7EC7D155EAA625EE82916E2CD294361886CD1FBD4", "A0234F3BC8527CA5628EEC81AD5D69895DA5680DC91D1CB8477F33F878B95B0B", "A0459B9F63B22559F5FA5D4C6DB3F9F72FF19342033578F073BF1D1B46CBB912", "136335439334A7698016A0D324DE72284E079D7B5220BB8FBD747816EEBEBACA", "BEC94911C2955676DB6C0A550986D76E3BA005667C442C9762B4FBB773DE228C", "179FBC148A3DD00FD24EA13458CC43BFA7F59C8182D783A513F6EBEC100C8924", "EBD41040E4BB3EC742C9E381D31EF2A41A48B6685C96E7CEF3C1DF6CD4331C99", "CA42DD41745FD0B81EB902362CF9D8BF719DA1BD1B1EFC946F5B4C99F42C1B9E", "CBB522D7B7F127AD6A0113865BDF1CD4102E7D0759AF635A7CF4720DC963C53B", "C3846BF24B9E93CA64274C0EC67C1ECC5E024FFCACD2D74019350E81FE546AE4", "45140B3247EB9CC8C5B4F0D7B53091F73292089E6E5A63E2749DD3ACA9198EDA", "BC104F15A48BE709DCA542A7E1D4B9DF6F054527E802EAA92D595444258AFE71", "F9E67D336C51002AC054C632022D66DDA2E7E3FFF10AD061ED31D8BBB410CFB2", "5D56499BE4D2E08BCFCAD08A3E38723D50503BDE706948E42F55603019E528AE", "30D0895A9A448A262091635522D1F52010B5867ACAE12C78EF958FD4F4389F2F", "2530CC8E98321502BAD96F9B1FBA1B099E2D299E0F4548BB914F363BC0D4531F", "3C5F81FEA5FAB82C64BFA2EAECAFCDE8E077FC8620A7CAE537163DF36EDBF378", "6C61DAC3A2DEF031506BE036D2A6FE401994FBD13DF9C8D466599274C446EC98", "15F0BA00A3AC7AF3AC884C072B1011A077BD77C097F40164B2F8598ABD83860C", "41C923866AB4CAD6B7AD578081582E020797A6CBDF4FFF78CE8396B38937D7F5", "6B9C08E86EB0F767CFAD65CD98B62149E5494A67F5845E7BD1ED019F27B86BD6", "8A866FD1B276B57E578E921C65828A2BED58E9F2F288054134B7F1F4BFC9CC74", "85A0DD7DD720ADB7FF05F83D542B209DC7FF4528F7D677B18389FEA5E5C49E86", "8FE4FB0AF93A4D0D67DB0BEBB23E37C71BF325DCBCDD240EA04DAF58B47E1840", "18F1FC7F205DF8ADDDEB7FE007DD57E3AF375A9C4D8D73546BF4F1FED1E18D35", "88EF81DE202EB018452E43F864725CEA5FBD1FC2D9D205730709C5D8B8690F46", "A45EDE3BBBF09C8AE15C72EFC07268D693A21C996FD51E67CA079460FD6D8873", "4200F5043AC8590EBB527D209ED1503029FBCBD41CA1B506EC27F15ADE7DAC69", "BF0FEEFB9E3A581AD5F9E9DB7589985743D261085C4D314F6F5D7259AA421612", "F1C1B50AE5A20DD8030EC9F6BC24823DD367B5255759B4E71B61FCE9F7375D73", "513B2CECB810D4CDE5DD85391ADFC6C2DD60D87BB736D2B521484AA47A0EBEF6", "E75E72ED9F560EEC6EB4800073A43FC3AD19195A392282017895974A99026B6C", "7908B40314C138100B518D0735807FFBFCF8518A0095337105BA386B153DD927", "4D2491414CFE956746EC4CEFA6CF6F72E28A1329432F9D8A907AC4CB5DADC15A", "668C83947DA63B724BECE1743C31A0E6AED0DB8EC5B31BE377BB784F91B6716F", "3C4FB0B95AB8B30032F432B86F535FE172C185D0FD39865837CF36187FA6F428", "1465FA205397B876FAA6F0A9958E5590E40FCC7FAA4FB7C2C8677521FB5FB658", "2CE1CB0BF9D2F9E102993FBE215152C3B2DD0CABDE1C68E5319B839154DBB7F5", "568D6905A2C88708A4B3025190EDCFEDB1974A606A13C6E5290FCB2AE63EDAB5", "62DD0BE9B9F50A163EA0F8E75C053B1ECA57EA55C8688F647C6881F2C8357B95", "BE6C4DA2BBB9BA59B6F3939768374246C3C005993FA98F020D1DEDBED48A81D5", "7600295EEFE85B9E1FD624DB76062AAAAE59818A54D2774CD4C0B2C01131E1B3", "DD6936FE21F8F077C123A1A521C12224F72255B73E03A7260693E8A24B0FA389", "8D722F81A9C113C0791DF136A2966DB26C950A971DB46B4199F4EA54B78BFB9F", "A4310D50AF18A6447190372A86AFAF8B951FFB431D837F1E5688B45971ED1557", "4B03F45807AD70F21BFC2CAE71C9FDE4604C064CF5FFB686BAE5DBAAD7FDD34C", "C1B48299ABA5208FE9630ACE55CA68A03EDA5A519C8802A0D3A673BE8F8E557D", "91E2F5788D5810EBA7BA58737DE1548A8ECACD014598BC0B143E041B17052552", "FD73DAD31C644FF1B43BEF0CCDDA96710B9CD9875ECA7E31707AF3E96D522BBD", "59769007F7685D0FCD50872F9F95D5755A5B2B457D81F3692B610A98672F0E1B", "BFD88FE1101C41AE3E801BF8BE56350EE9BAD1A6B9BD515EDC5C6D5B8711AC44", "4FF460D54B9C86DABFBCFC5712E0400D2BED3FBC4D4FBDAA86E06ADCD2A9AD7A", "E793C9B02FD8AA13E21C31228ACCB08119643B749C898964B1746D46C3D4CBD2", "EB04CF5EB1F39AFA762F2BB120F296CBA520C1B97DB1589565B81CB9A17B7244", "69DDD7EA90BB57C93E135DC85EA6FCD5480B603239BDC454FC758B2A26CF7F79", "9ACFAB7E43C8D880D06B262A94DEEEE4B4659989C3D0CAF19BAF6405E41AB7DF", "2399561127A57125DE8CEFEA610DDF2FA078B5C8067F4E828290BFB860E84B3C", "CECDDC905099D8DADFC5B1D209B737CBE2C18CFB2C10C0FF0BCF0D3286FC1AA2", "EBC5570C29018C4D67B1AA127BAF12F703B4611EBC17B7DAB5573894179B93FA", "8ECDE6884F3D87B1125BA31AC3FCB13D7016DE7F57CC904FE1CB97C6AE98196E", "1BA5B2AA8C65401A82960118F80BEC4F62304D83CEC4713A19C39C011EA46DB4", "18CE6CFE7BF14E60B2E347B8DFE868CB31D02EBB3ADA271569F50343B46DB3A4", "E35D28419ED02025CFA69038CD623962458DA5C695FBDEA3C22B0BFB25897092", "B676F2EDDAE8775CD36CB0F63CD1D4603961F49E6265BA013A2F0307B6D0B804", "44B545AA8A25E65A73CA15DC27FC36D24C1CB9953A066539B11582DC487B4833", "A040929A02CE53B4ACF4F2FFC6981CE4496F755E6D45FE0B2A692BCD52523F36", "96BCEC06264976F37460779ACF28C5A7CFE8A3C0AAE11A8FFCEE05C0BDDF08C6", "54455F7129C20B1447C418F997168F24C58FC5023BF5DA5BE2EB6E1DD8902ED5", "A1339D33281A0B56E557D3D32B1CE7F9367EB094BD5FA72A7E5004C8DED7CAFE", "46EDC3689046D53A453FB3104AB80DCAEC658B2660EA1629DD7E867990648716", "BFFF8FD04433487D6A8AA60C1A29767A9FC2BBB05E420F713A13B992891D3893", "22A2C1F7BDED704CC1E701B5F408C310880FE956B5DE2A4A44F99C873A25A7C8", "2E7BF16CC22485A7BBE2AA8696750761B0AE39BE3B2FE9D0CC6D4EF73491425C", "3417BB06CC6007DA1B961C920B8AB4CE3FAD820E4AA30B9ACBC4A74EBDCEBC65", "85666A562EE0BE5CE925C1D8890A6F76A87EC16D4D7D5F29EA7419CF20123B69", "5A885DB19C01D912C5759388938CAFBBDF031AB2D48E91EE15589B42971D039C", "D40E9C86CD8FE468C1776959F49EA774FA548684B6C406F3909261F4DCE2575C", "0753E940378C1BD5E3836E395DAEA5CB839E5046F1BD0EAE1951CF10FEC7C965", "2CABEAFE37D06CA22ABA7391C0033D25982952C453647349763A3AB5AD6CCF69", "8560F91C3624DABA9570B5FEA0DBE36FF11A8323BE9486854FB3F34A5571198D"]
            .iter().map(|s| s.to_string()).collect(),
        symantec_roots: vec![],
        symantec_exceptions: vec![],
        india_trusted: vec![],
        india_domains: vec![],
        anssi_trusted: vec![],
        anssi_domains: vec![],
    });

    let begin = Instant::now();

    let res = engine::valid_domain(&policy, &VecDeep::from_vec(roots), &VecDeep::from_vec(chain), &args.domain)?;

    eprintln!("result: {}", res);

    if args.stats {
        eprintln!("validation took {}ms", begin.elapsed().as_micros() as f64 / 1000f64);
    }

    if !res {
        return Err(Error::DomainValidationError);
    }

    Ok(())
}

fn main() -> ExitCode {
    match main_args(Args::parse()) {
        Ok(..) => ExitCode::from(0),
        Err(err) => {
            eprintln!("{}", err);
            ExitCode::from(1)
        }
    }
}
